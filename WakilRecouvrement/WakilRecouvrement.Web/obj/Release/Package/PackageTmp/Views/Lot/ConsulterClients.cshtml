@model PagedList.IPagedList<WakilRecouvrement.Web.Models.ViewModel.SuiviAffectationViewModel>

@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2> Consulter tous les clients</h2>


@using (Html.BeginForm("ConsulterClients", "Lot", FormMethod.Get))
{
    <br />
    <div class="card">
        <div class="card-header" id="headingTwo">

            <br />


            <div class="row">

                <div class="col-xs-3  col-md-3">


                    @Html.Label("numLot", "Lot:", new { @class = "control-label " })

                    @Html.DropDownList("numLot", ViewData["list"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>
                <div class="col-xs-3  col-md-3">


                    @Html.Label("sortOrder", "Trier par:", new { @class = "control-label " })

                    @Html.DropDownList("sortOrder", ViewData["sortOrder"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })


                </div>




            </div>

        </div>

        <div class="card-body">

            <div class="row">
                <br />

                <div class="col-xs-3  col-md-10">

                    @Html.Label("SearchString", "Chercher:", new { @class = "control-label " })

                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })

                    <br />
                    <input type="submit" class="btn btn-default" value="Chercher" />


                </div>

            </div>


        </div>

    </div>






}


<div class="card">


    <div class="card-body">

        <div class="row">

            <div class="col-xs-3  col-md-3">

                <span>  Total: </span>
                <span><strong>@ViewBag.total</strong></span>

            </div>
        </div>

        <br />
        <div class="row">

            <div class="col-sm-3  col-md-10">

                <table class="table table-bordered table-condensed table-responsive" style="display:table">

                    <thead>

                        <tr>
                            <th>

                                Num Lot
                            </th>
                            <th>
                                Compte

                            </th>
                            <th>


                                IDClient
                            </th>
                            <th>

                                Nom Client
                            </th>
                            <th>
                                Tel Portable
                            </th>
                            <th>
                                Tel Fixe
                            </th>
                            <th>
                                Fax
                            </th>
                            <th>

                                Solde Debiteur

                            </th>

                            <th>

                                Agence
                            </th>
                            <th>
                                Adresse
                            </th>
                            <th>
                                Type
                            </th>
                            <th>
                                Numero

                            </th>
                            <th>
                                Poste Code

                            </th>
                        </tr>
                    </thead>


                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NumLot)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Compte)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IDClient)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NomClient)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TelPortable)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TelFixe)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Fax)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SoldeDebiteur)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DescIndustry)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Adresse)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Type)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Numero)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PostCode)
                                </td>

                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>

    </div>

    </div>




<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ConsulterClients",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))