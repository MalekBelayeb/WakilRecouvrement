@model PagedList.IPagedList<WakilRecouvrement.Web.Models.ClientAffecteViewModel>

@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "";
}





@using (Html.BeginForm("AffectationList", "Affectation", FormMethod.Get))
{


    <div class="card">
        <div class="card-header" id="headingTwo">

            <h2>Traiter les affectations</h2>


        </div>

        <div class="card-body">


            <div class="row">


                <div class="col-xs-3  col-md-3">


                    @Html.Label("numLot", "Lot:", new { @class = "control-label " })

                    @Html.DropDownList("numLot", ViewData["list"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>


                <div class="col-xs-3  col-md-3">

                    @Html.Label("traite", "Etat:", new { @class = "control-label" })

                    @Html.DropDownList("traite", ViewBag.TraiteList as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

            </div>

            <br />

            <div class="row">

                <div class="col-xs-3 ">


                    @Html.Label("sortOrder", "Trier par:", new { @class = "control-label " })

                    @Html.DropDownList("sortOrder", ViewData["sortOrder"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

            </div>

            <br />

            @Html.Label("SearchString", "Chercher:", new { @class = "control-label " })

            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })



            <br />
            <div class="row">

                <div class="col-xs-3  col-md-10">

                    <p>
                        <input type="submit" class="btn btn-default" value="Search" />
                    </p>

                </div>

                <div class="col-xs-4">

                    <span><strong>@ViewBag.total</strong> Client(s) trouvés</span>

                </div>

            </div>


        </div>

    </div>

}


<table class="table">
    <tr>

        <th>

            Trait.

        </th>

        <th>
            Num Lot
        </th>
        <th>
            Etat
        </th>
        <th>
            Date affectation
        </th>

        <th>
            Compte
        </th>
        <th>
            IDClient
        </th>
        <th>
            Nom Client
        </th>
        <th>
            Solde Debiteur
        </th>

        <th>
            Tel Portable
        </th>

        <th>
            Tel Fixe
        </th>
        <th>
            Agence
        </th>
        <th>
            Adresse
        </th>
        <th>
            Numero
        </th>

    </tr>

    @foreach (var item in Model)
    {


        string classStyle = "";

        if (item.Formulaire != null)
        {

            if (item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.SOLDE || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.SOLDE_TRANCHE)
            {
                classStyle = "p-3 mb-2 bg-success text-white";
            }
            else if (item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.FAUX_NUM || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.REFUS_PAIEMENT)
            {
                classStyle = "p-3 mb-2 bg-danger text-white";
            }
            else if (item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.RDV || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.RAPPEL || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.INJOIGNABLE || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.NRP || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.RACCROCHE || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.AUTRE || item.Formulaire.EtatClient == WakilRecouvrement.Domain.Entities.Note.A_VERIFIE)
            {
                classStyle = "p-3 mb-2 bg-warning text-dark";
            }
            else
            {
                classStyle = "p-3 mb-2 bg-white text-dark";
            }

        }
        else
        {
            classStyle = "p-3 mb-2 bg-white text-dark";
        }

     <tr class="@classStyle">

            <td>
                @Html.ActionLink("Traiter", "CreerFormulaire", "Formulaire", new { @class="btn btn-default" ,id = item.Affectation.AffectationId, msgError = "" }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.NumLot)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Formulaire.EtatClient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Affectation.DateAffectation)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Lot.Compte)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.IDClient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.NomClient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.SoldeDebiteur)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.TelPortable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.TelFixe)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.DescIndustry)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.Adresse)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.Numero)
            </td>

        </tr>
    }

</table>

<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("AffectationList",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

