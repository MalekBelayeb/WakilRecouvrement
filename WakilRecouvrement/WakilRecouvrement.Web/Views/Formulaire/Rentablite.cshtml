@model PagedList.IPagedList<WakilRecouvrement.Web.Models.ViewModel.RentabiliteViewModel>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "";
}


@using (Html.BeginForm("Rentablite", "Formulaire", FormMethod.Post, new { onsubmit = "showLoading()" }))
{

    <div class="card">
        <div class="card-header" id="headingTwo">

            <h2>Rentabilité</h2>

        </div>

        <div class="card-body">

            <div class="row">

                <div class="col-xs-3 col-md-3 ">

                    @Html.Label("rentabilite", "Rentabilité:", new { @class = "control-label " })

                    @Html.DropDownList("rentabilite", ViewData["rentabilite"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>


                <div class="col-xs-3 col-md-3">

                    @Html.Label("traite", "Etat:", new { @class = "control-label " })

                    @Html.DropDownList("traite", ViewBag.TraiteList as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

                <div class="col-xs-3 col-md-3">

                    @Html.Label("numLot", "Lot:", new { @class = "control-label " })

                    @Html.DropDownList("numLot", ViewData["list"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>
                <div class="col-xs-3 col-md-3">

                    @Html.Label("agent", "Affecté a:", new { @class = "control-label " })

                    @Html.DropDownList("agent", ViewBag.AgentList as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

            </div>



            <br />


            <div class="row">

                <div class="col-xs-3 ">

                    @Html.Label("sortOrder", "Trier Par:", new { @class = "control-label " })

                    @Html.DropDownList("sortOrder", ViewData["sortOrder"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

            </div>
            <br />
            <div class="row">

                <div class="col-xs-3 ">

                    @Html.Label("poucentage", "Revenu par operation:", new { @class = "control-label " })

                    <input type="number" name="poucentage" value="15" min="0" max="100" step="0.1" id="myPercent" />  %

                </div>

            </div>
            <br />

            @Html.Label("SearchString", "Chercher:", new { @class = "control-label " })

            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            <br />
            <div class="row">

                <div class="col-xs-3  col-md-10">

                    <p>
                        <input id="submitBtn" type="submit" class="btn btn-primary" value="Calculer" />
                        
                        <button style="display:none" id="submitLoading" class="btn btn-primary" type="button" disabled>
                            <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
                            <span class="sr-only">Loading...</span>
                        </button>
                    </p>

                </div>

                <div class="col-xs-4">

                    <span><strong>@ViewBag.total</strong> Client(s) trouvés</span>

                </div>

            </div>


        </div>

    </div>

}

<br />
<br />

<table class="table">
    <tr>


        <th>
            Total Revenu (DT)
        </th>


    </tr>


        <tr class="p-3 mb-2 bg-white text-dark">

           
            <td>
               @ViewBag.RevenueTotal
            </td>

        </tr>
    

</table>

<br />
<br />

<table class="table">
    <tr>

        <th>
            Historique
        </th>

        <th>
            NumLot
        </th>

        <th>
            Agent
        </th>
        
        <th>
            Solde
        </th>

        <th>
            Compte
        </th>

        <th>
            IDClient
        </th>

        <th>
            Solde débiteur
        </th>

        <th>
            Nom Client
        </th>

        <th>
            Revenu (DT)
        </th>

    </tr>

    @foreach (var item in Model)
    {

<tr class="p-3 mb-2 bg-white text-dark">

    <td>
        @Html.ActionLink("Details", "DetailsRevenue", new { idAff = item.Affectation.AffectationId, idLot = item.Lot.LotId, pourcentage = ViewBag.pourcentage, total = item.Revenue })
    </td>    
    <td>
        @Html.DisplayFor(modelItem => item.Lot.NumLot)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Affectation.Employe.Username)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Formulaire.EtatClient)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Lot.Compte)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Lot.IDClient)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.Lot.SoldeDebiteur)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.Lot.NomClient)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.Revenue)
    </td>

</tr>
    }

</table>

<script>



    function showLoading() {

        document.getElementById("submitLoading").style.display = "block";
        document.getElementById("submitBtn").style.display = "none";

    }
    

</script>


<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Rentablite",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))