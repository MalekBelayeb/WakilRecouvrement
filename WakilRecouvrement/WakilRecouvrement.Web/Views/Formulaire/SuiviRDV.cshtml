@model PagedList.IPagedList<WakilRecouvrement.Web.Models.ClientAffecteViewModel>

@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "";
}

<h2>Suivi des RDV</h2>



@using (Html.BeginForm("SuiviRDV", "Formulaire", FormMethod.Get))
{


    <div class="card">
        <div class="card-header" id="headingTwo">

            <br />


            <div class="row">
                <div class="col-xs-3  col-md-3">

                    @Html.Label("RDVType", "Type:", new { @class = "control-label" })

                    @Html.DropDownList("RDVType", ViewBag.RDVList as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

                <div class="col-xs-3  col-md-3">


                    @Html.Label("numLot", "Lot:", new { @class = "control-label " })

                    @Html.DropDownList("numLot", ViewData["list"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

            </div>



            <br />


            <div class="row">

                <div class="col-xs-3 ">


                    @Html.Label("sortOrder", "Trier par:", new { @class = "control-label " })

                    @Html.DropDownList("sortOrder", ViewData["sortOrder"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.CurrentFilter })

                </div>

            </div>

            <br />

        </div>

        <div class="card-body">

            <br />
            <div class="row">

                <div class="col-xs-3  col-md-10">


                    <p>
                        <input type="submit" class="btn btn-default" value="Search" />
                    </p>

                </div>

                <div class="col-xs-4">

                    <span><strong>@ViewBag.total</strong> Client(s) trouvés</span>

                </div>

            </div>


        </div>

    </div>

}



<table class="table">
    <tr>

        <th>
            Traite
        </th>

        <th>
            Num Lot
        </th>
        <th>
            Date RDV
        </th>
        <th>
            Traite le
        </th>

        <th>
            Compte
        </th>
        <th>
            IDClient
        </th>
        <th>
            Nom Client
        </th>
        <th>
            Solde Debiteur
        </th>

        <th>
            Tel Portable
        </th>

        <th>
            Tel Fixe
        </th>

        <th>
            Numero
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {

        <tr class="p-3 mb-2 bg-white text-dark">

            <td>

                @Html.ActionLink("Traiter", "CreerFormulaire", "Formulaire", new { id = item.Affectation.AffectationId, msgError = "" }, null)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.NumLot)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Formulaire.DateRDV)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Formulaire.TraiteLe)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.Compte)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.IDClient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.NomClient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.SoldeDebiteur)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.TelPortable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.TelFixe)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.TelFixe)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lot.Numero)
            </td>


        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("SuiviRDV",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

