@model PagedList.IPagedList<WakilRecouvrement.Web.Models.ViewModel.ValiderTraitementViewModel>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


<script src="~/adminlte/plugins/jquery/jquery.min.js"></script>
<script src="~/adminlte/plugins/jquery-ui/jquery-ui.min.js"></script>

<script src="~/Scripts/bootstrap.js"></script>

<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />


<link href="~/Content/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/responsive.bootstrap.min.css" rel="stylesheet" />

<script src="~/Scripts/jquery.dataTables.min.js"></script>

<script src="~/Scripts/dataTables.bootstrap4.min.js"></script>

<script src="~/adminlte/plugins/ekko-lightbox/ekko-lightbox.js"></script>
<link rel="stylesheet" href="~/adminlte/plugins/ekko-lightbox/ekko-lightbox.css" />


<div class="card">
    <div class="card-header" id="headingTwo">

        <h2>Valider Les Traitements</h2>

    </div>

    <div class="card-body">

        @using (Html.BeginForm("ValiderTraitement", "Formulaire", FormMethod.Post, new { onsubmit = "showLoading()" }))
        {

            <div class="row">

                <div class="col-xs-3  col-md-3">

                    @Html.Label("traite", "Etat:", new { @class = "control-label" })

                    @Html.DropDownList("traite", ViewBag.TraiteList as SelectList, new { @class = "form-control", currentFilter = ViewBag.currentTraite })

                </div>

                <div class="col-xs-3  col-md-3">


                    @Html.Label("numLot", "Lot:", new { @class = "control-label " })

                    @Html.DropDownList("numLot", ViewData["list"] as SelectList, new { @class = "form-control", currentFilter = ViewBag.currentNumLot })

                </div>
                <div class="col-xs-3  col-md-3">

                    @Html.Label("agent", "Agent:", new { @class = "control-label " })

                    @Html.DropDownList("agent", ViewBag.AgentList as SelectList, new { @class = "form-control", currentFilter = ViewBag.currentAgent })

                </div>

                <br />

            </div>
            <div class="row">

                <div class="col-xs-3 col-md-3">

                    @Html.Label("SearchString", "Chercher:", new { @class = "control-label " })

                    @Html.TextBox("SearchString", ViewBag.currentFilter as string, new { @class = "form-control" })

                </div>
                <div id="dateTraitement" style="display:none" class="col-xs-3 col-md-3">

                    <label for="traitDate">Type:</label>
                    <input class="form-control" name="traitDate" value="@ViewBag.currentTraitDate" id="traitDate" type="date">

                </div>

            </div>

            <div class="row">

                <div class="col-xs-3  col-md-10">

                    <p>
                        <input id="submitBtn" type="submit" class="btn btn-primary" value="Chercher" />

                        <button style="display:none" id="submitLoading" class="btn btn-primary" type="button" disabled>
                            <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
                            <span class="sr-only">Loading...</span>
                        </button>
                    </p>

                </div>


            </div>

        }
    </div>
    <div class="card-footer text-muted">
        <span>
            Total:
        </span>
        <span><strong> @ViewBag.total </strong></span>

    </div>
    <span id="page" hidden></span>
</div>


@using (Html.BeginForm("UploadVerifier", "Formulaire", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "ShowLoader()" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div id="importFile">

        <div class="custom-file">
            <br />
            <input type="file" name="postedFile" class="custom-file-input" id="customFileLang" lang="es">
            <label class="custom-file-label" for="customFileLang">Importer votre fichier</label>

        </div>

        <div class="row row-list">
            <div class="col-xs-3">

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Importer" class="btn btn-default" />
                    </div>
                </div>

            </div>
            <div class="col-xs-2 container-img">

                <div style="display:none" id="loader" class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>

            </div>
            @Html.ValidationMessage("Importer", "", new { @class = "text-danger" })

        </div>

        <br />
        <br />
    </div>

}


<table id="demodata" class="table table-striped table-bordered dt-responsive nowrap">
    <thead>
        <tr>

            <th>Verification</th>
            <th>Num Lot</th>
            <th>Etat Client</th>
            <th>Montant Versé/Déclaré </th>
            <th>Note</th>

            <th>Traité le:</th>
            <th>Agent</th>
            <th>Solde débiteur</th>
            <th>Compte</th>
            <th>IDClient</th>
            <th>NomClient</th>
            <th>Agence</th>

        </tr>
    </thead>
    <tbody>
       
      
            @foreach (var item in Model)
            {

                <tr>
                    <td>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lot.NumLot)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Etat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MontantVerseDeclare)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.descAutre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TraiteLe)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lot.SoldeDebiteur)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lot.Compte)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lot.IDClient)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lot.NomClient)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lot.DescIndustry)
                    </td>

                </tr>
            
        }


    </tbody>
</table>


<span id="LocalStorage" style="visibility:hidden"></span>



<script>

    function showLoading() {

        document.getElementById("submitLoading").style.display = "block";
        document.getElementById("submitBtn").style.display = "none";

    }


    $(document).ready(function () {
        $.noConflict();

        var Table = DemoDatatable();


        $("#importFile").hide()


        $("#numLot").change(function () {

            Table = DemoDatatable();

        })

        $("#traite").change(function () {


            if ($("#traite").val() == "A_VERIFIE")
            {

                $("#importFile").show()

            }
            else {

                $("#importFile").hide()
            }

            Table = DemoDatatable();

        })

      /*  $("#agent").change(function () {

            Table = DemoDatatable();

        })*/

        function validerTraitement(id, valid) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("VerifierEtat", "Formulaire")',
                dataType: 'json',
                data: { id: id, valid: valid },
                success: function (data) {

                    Table.draw(false)

                }
            });

        }


        function validerTraitementVerification(id, valid, montant) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("VerifierEtat", "Formulaire")',
                dataType: 'json',
                data: { id: id, valid: valid, montant:  montant },
                success: function (data) {


                    Table.draw(false)

                }
            });

        }



       /* $(document).on('click', 'tbody  .verifie', function () {

            var data_row = Table.row($(this).closest('tr')).data();

            validerTraitement(data_row["FormulaireId"], true)

        });*/



        /*$(document).on('click', 'tbody  .reject', function () {
            var data_row = Table.row($(this).closest('tr')).data();
            if (confirm("Ceci implique la suppression de l'operation, êtes vous sur de vouloir continuer ?  ")) {

                validerTraitement(data_row["FormulaireId"], false)

            }

        });*/


       /* $(document).on('click', 'tbody  .validerA_VERIFIE', function () {
            var data_row = Table.row($(this).closest('tr')).data();

            validerTraitementVerification(data_row["FormulaireId"], true, $("#montant").val() )

        });*/

        //if (@ViewBag.IDClient != "0") {

          //  Table.search(@ViewBag.IDClient).draw();
       // }


    });





   /* function DemoDatatable() {

        var table = $("#demodata").DataTable({


            "processing": true,
            "serverSide": true,
            "filter": true,
            "orderMulti": false,
            "destroy": true,
            "ordering": true,
            "ajax": {
                "url": '@Url.Action("ValiderTraitement", "Formulaire")',
                "type": "POST",
                "datatype": "json",
                "data": { IsValid: false, numLot: $("#numLot").val(), traite: $("#traite").val(), agent: $("#agent").val(), drawSave: document.getElementById("page").innerHTML }

            },
            "columns": [

                  { "data": "NumLot", "name": "NumLot", "autoWidth": true }
                , {
                    "data": "FormulaireId", "name": "FormulaireId", "autoWidth": true, "render": function (data, type, row, meta) {

                        if (row["Etat"] == "A_VERIFIE") {

                            return "<div class='btn-group'><button type='button' class='btn btn-secondary dropdown-toggle' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>Verifier</button><div class='dropdown-menu dropdown-menu-right'><input class='dropdown-item form-control' id='montant' value='1.000' step='0.001' type='number' min='0' max='any' ><button class='validerA_VERIFIE dropdown-item' type='button'>Valider</button><button class='reject dropdown-item' type='button'>Rejeter</button></div></div>";

                        } else {

                            return "<div class='btn-group'><button type = 'button' class='btn btn-secondary dropdown-toggle' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false' >Vérifier</button><div class='dropdown-menu dropdown-menu-right'><button class='verifie dropdown-item' type='button'>Valider</button><button class='reject dropdown-item' type='button'>Rejeter</button></div></div>";

                        }

                    }
                }
                , {
                    "data": "Image", "name": "Image", "autoWidth": true, "data": "Image", "name": "FormulaireId", "autoWidth": true, "render": function (data, type, row, meta) {

                        if (row["Image"] != "") {

                            var images = (row["Image"]).split(",")
                            var el = document.createElement("div");
                            el.innerHTML = "<a data-toggle='lightbox' runat='server' href=''></a>"
                            el.firstChild.innerHTML = "Reçu (" + row["NBRecu"]+")"
                            el.firstChild.setAttribute("data-gallery", 'gallery' + row["FormulaireId"])

                              for (var i = 0; i < images.length; i++) {

                                if (i == 0) {
                                    var a = el.firstChild;
                                    //el.firstChild.setAttribute("data-title", images[i])
                                    //a.firstChild.setAttribute('src', images[i])

                                    a.setAttribute('href', images[i])

                                } else {
                                    var newImg = document.createElement("a")
                                    newImg.setAttribute("data-toggle", 'lightbox')
                                    newImg.setAttribute("data-gallery", 'gallery' + row["FormulaireId"])
                                    newImg.setAttribute("runat", 'server')

                                    //newImg.setAttribute("data-title", images[i])
                                    newImg.setAttribute('href', images[i])
                                    el.appendChild(newImg)
                                }

                            }

                            return el.innerHTML;

                        }
                        if (row["Image"] == "") {
                            return '<p></p>';


                        }
                    }
                  }
                , { "data": "Etat", "name": "Etat", "autoWidth": true }
                , { "data": "descAutre", "name": "descAutre", "autoWidth": true }

                , { "data": "MontantVerseDeclare", "name": "MontantVerseDeclare", "autoWidth": true }
                , { "data": "TraiteLe", "name": "TraiteLe", "autoWidth": true }
                , { "data": "Username", "name": "Username", "autoWidth": true }
                , { "data": "SoldeDebiteur", "name": "SoldeDebiteur", "autoWidth": true }
                , { "data": "Compte", "Name": "Compte", "autoWidth": true }
                , { "data": "IDClient", "name": "IDClient", "autoWidth": true }
                , { "data": "NomClient", "name": "NomClient", "autoWidth": true }
                , { "data": "DescIndustry", "name": "DescIndustry", "autoWidth": true }

            ]
        });*/

       /* table.on('xhr.dt',
            function (e, settings, data, xhr) {

                document.getElementById("nbTotal").innerHTML = data["info"]["nbTotal"]
                document.getElementById("page").innerHTML = data["info"]["draw"]
            });*/


        return table;
    }

    $(document).on('click', '[data-toggle="lightbox"]', function (event) {
        event.preventDefault();
        $(this).ekkoLightbox({

            alwaysShowClose: true,

        });
    });

</script>

<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ValiderTraitements",
    new { page, currentPage = ViewBag.page, currentFilter = ViewBag.currentFilter, currentNumLot = ViewBag.currentNumLot, currentTraite = ViewBag.currentTraite, currentAgent = ViewBag.currentAgent }))